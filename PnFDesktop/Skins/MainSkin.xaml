<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Default values for common controls -->
    
    
    <!-- Buttons -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="80" />
    </Style>

    <!-- Textblock -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="WaterMarkBrush" Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
        <!-- Textblock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="WatermarkText">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="10,10,0,0"/>
        <Setter Property="Foreground" Value="{StaticResource WaterMarkBrush}" />
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <!-- Textboxes -->
    <Style TargetType="{x:Type TextBox}" x:Key="ValueEntryTextBox">
        <Setter Property="Height" Value="22" />
        <Setter Property="MinWidth" Value="80" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxTiny">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="30" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxShort">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="80" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxLong">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="200" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Checkbox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Radiobutton -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

     <!--Window--> 
    <Style TargetType="{x:Type Window}">
        <Setter Property="Icon" Value="pack://application:,,,/Resources/Images/P_FDesktop32.ico" />
    </Style>

     <!--Dialog box (Window)--> 
    <Style TargetType="{x:Type Window}" x:Key="DialogStyle">
        <Setter Property="Icon" Value="pack://application:,,,/Resources/Images/P_FDesktop32.ico" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowStyle" Value="SingleBorderWindow" />
        <Setter Property="ShowInTaskbar" Value="False" />
    </Style>

    <!-- Validation template to show red exclamation mark -->
    <ControlTemplate x:Key="ExclamationMarkValidationTemplate">
        <DockPanel>
            <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
            <AdornedElementPlaceholder/>
        </DockPanel>
    </ControlTemplate>

</ResourceDictionary>